{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["Section","title","children","className","Feedback","onClick","id","Statistics","good_value","neutral_value","bad_value","total","positivePercentage","isNaN","Notification","props","App","useState","setGood","setNeutral","setBad","countTotalFeedback","evt","target","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAYeA,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASD,MAAOA,EAAOE,UAAU,UAAjC,UACE,6BAAKF,IACJC,M,MCkCQE,MAtCf,YAAgC,IAAZC,EAAW,EAAXA,QAClB,OACE,mCACE,qBAAKF,UAAU,eAAf,SACE,qBAAIA,UAAU,eAAd,UACE,6BACE,wBACEA,UAAU,mBACVG,GAAG,aACHD,QAASA,EAHX,oBAQF,6BACE,wBACEF,UAAU,sBACVG,GAAG,gBACHD,QAASA,EAHX,uBAQF,6BACE,wBACEF,UAAU,kBACVG,GAAG,YACHD,QAASA,EAHX,2B,MCFGE,MAtBf,YAMI,IALFC,EAKC,EALDA,WACAC,EAIC,EAJDA,cACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAKT,UAAU,mBAAf,SACE,qBAAIA,UAAU,oBAAd,UACE,6CAAcK,KACd,gDAAiBC,KACjB,4CAAaC,KACb,8CAAeC,MACbE,MAAMD,IACN,yDAA0BA,EAA1B,aCZKE,MAJf,SAAsBC,GACpB,OAAO,mDCGM,SAASC,IACtB,MAA8BC,mBAAS,GAAvC,mBAAOT,EAAP,KAAmBU,EAAnB,KACA,EAAoCD,mBAAS,GAA7C,mBAAOR,EAAP,KAAsBU,EAAtB,KACA,EAA4BF,mBAAS,GAArC,mBAAOP,EAAP,KAAkBU,EAAlB,KAuBA,SAASC,IACP,OAAOb,EAAaC,EAAgBC,EAMtC,OACE,qCACE,cAAC,EAAD,CACET,MAAM,wBACNC,SAAU,cAAC,EAAD,CAAiBG,QAhCjC,SAAqBiB,GAGnB,OAFYA,EAAIC,OAAOjB,IAGrB,IAAK,aACHY,EAAQV,EAAa,GACrB,MAEF,IAAK,gBACHW,EAAWV,EAAgB,GAC3B,MAEF,IAAK,YACHW,EAAOV,EAAY,SAqBnBF,GAAeC,GAAkBC,EAGjC,cAAC,EAAD,CACET,MAAM,aACNC,SACE,cAAC,EAAD,CACEM,WAAYA,EACZC,cAAeA,EACfC,UAAWA,EACXC,MAAOU,IACPT,mBApBHY,KAAKC,MAAOjB,EAAaa,IAAwB,SAUpD,cAAC,EAAD,CAASpB,MAAM,aAAaC,SAAU,cAAC,EAAD,SCzC9CwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACZ,EAAD,MAEFa,SAASC,eAAe,W","file":"static/js/main.ac59fb2d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./Section.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <section title={title} className=\"section\">\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n","import React from \"react\";\nimport styles from \"./FeedbackOptions.css\";\n\nfunction Feedback({ onClick }) {\n  return (\n    <>\n      <div className=\"button__area\">\n        <ul className=\"button__list\">\n          <li>\n            <button\n              className=\"button__btn good\"\n              id=\"good_value\"\n              onClick={onClick}\n            >\n              Good\n            </button>\n          </li>\n          <li>\n            <button\n              className=\"button__btn neutral\"\n              id=\"neutral_value\"\n              onClick={onClick}\n            >\n              Neutral\n            </button>\n          </li>\n          <li>\n            <button\n              className=\"button__btn bad\"\n              id=\"bad_value\"\n              onClick={onClick}\n            >\n              Bad\n            </button>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default Feedback;\n","import React, { Component } from \"react\";\nimport styles from \"./Statistics.css\";\n\nfunction Statistics({\n  good_value,\n  neutral_value,\n  bad_value,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div className=\"statistics__area\">\n      <ul className=\"statistics__list \">\n        <li>{`Good: ${good_value}`}</li>\n        <li>{`Neutral: ${neutral_value}`}</li>\n        <li>{`Bad: ${bad_value}`}</li>\n        <li>{`Total: ${total}`}</li>\n        {!isNaN(positivePercentage) && (\n          <li>{`Positive feedback:${positivePercentage}%`}</li>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default Statistics;\n","import React, { Component } from \"react\";\n\nfunction Notification(props) {\n  return <p>No feedback given</p>;\n}\n\nexport default Notification;\n","import { useState } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nexport default function App() {\n  const [good_value, setGood] = useState(0);\n  const [neutral_value, setNeutral] = useState(0);\n  const [bad_value, setBad] = useState(0);\n\n  function handleClick(evt) {\n    const key = evt.target.id;\n\n    switch (key) {\n      case \"good_value\":\n        setGood(good_value + 1);\n        break;\n\n      case \"neutral_value\":\n        setNeutral(neutral_value + 1);\n        break;\n\n      case \"bad_value\":\n        setBad(bad_value + 1);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function countTotalFeedback() {\n    return good_value + neutral_value + bad_value;\n  }\n  function countPositiveFeedbackPercentage() {\n    return Math.round((good_value / countTotalFeedback()) * 100);\n  }\n\n  return (\n    <>\n      <Section\n        title=\"Please leave feedback\"\n        children={<FeedbackOptions onClick={handleClick} />}\n      />\n      {!good_value && !neutral_value && !bad_value ? (\n        <Section title=\"Statistics\" children={<Notification />} />\n      ) : (\n        <Section\n          title=\"Statistics\"\n          children={\n            <Statistics\n              good_value={good_value}\n              neutral_value={neutral_value}\n              bad_value={bad_value}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n          }\n        />\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}